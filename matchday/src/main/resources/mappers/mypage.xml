<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mypage.xml -->

<mapper namespace="mypage">


	<!-- 마이페이지 항목 불러오기 -->
	<select id="getUserById" parameterType="String"
		resultType="kr.co.matchday.mypage.MypageDTO">
		SELECT * FROM users WHERE UserID = #{userID}
	</select>

	<!-- 마이페이지 수정 -->
	<update id="updateUser"
		parameterType="kr.co.matchday.mypage.MypageDTO">
		UPDATE users
		SET Password = #{password},
		Email = #{email},
		Zipcode = #{zipcode},
		Address1 = #{address1},
		Address2 = #{address2},
		Number = #{number}
		WHERE UserID = #{userID}
	</update>

	<!-- 회원 등급을 'F'로 변경 -->
	<update id="updateUserGradeToF"
		parameterType="kr.co.matchday.mypage.MypageDTO">
		UPDATE users
		SET Grade = 'F'
		WHERE UserID = #{userID}
	</update>

	<!-- 포인트 적립 내역 조회 쿼리 -->
	<select id="getPointHistoryList"
		resultType="kr.co.matchday.point.PointHistoryDTO">
		SELECT
		pointhistoryid,
		userid,
		pointcategoryid,
		pointtype,
		reviewid,
		pointsource,
		pointamount,
		pointcreationdate,
		pointusedate
		FROM
		pointhistory
		WHERE
		userid = #{userid}
		ORDER BY
		pointhistoryid DESC
	</select>

	<!-- 쿠폰목록 조회 쿠폰마스터의 정보를 가져오기위해 조인 -->
	<select id="selectCouponList"
		resultType="kr.co.matchday.coupon.CouponDTO">
		SELECT c.couponid, c.coupontypeid, c.userid, c.usage,
		cm.couponname, cm.startdate, cm.enddate, cm.applicableproduct
		FROM
		coupon c
		JOIN couponmaster cm ON c.coupontypeid = cm.coupontypeid
		where
		c.userid = #{userid}
	</select>

	<!-- 보유한 쿠폰목록 -->
	<select id="selectReceivedCoupons" parameterType="String"
		resultType="kr.co.matchday.coupon.CouponDTO">
		SELECT c.couponid, cm.couponname, c.usage, cm.startdate,
		cm.enddate,
		cm.applicableproduct
		FROM coupon c
		JOIN couponmaster cm ON
		c.coupontypeid = cm.coupontypeid
		WHERE c.userid = #{userid}
	</select>

	<!-- 다운로드가능한 쿠폰 목록 -->
	<select id="selectAvailableCoupons"
		resultType="kr.co.matchday.admin.CouponMasterDTO">
		SELECT coupontypeid, couponname, startdate, enddate,
		applicableproduct
		FROM couponmaster
		WHERE NOW() BETWEEN startdate AND
		enddate
	</select>

	<!-- insertUserCoupon 쿼리 -->
	<insert id="insertUserCoupon"
		parameterType="kr.co.matchday.coupon.CouponDTO">
		INSERT INTO coupon (couponid, coupontypeid, userid,
		`usage`)
		VALUES (#{couponid}, #{coupontypeid}, #{userid}, #{usage})
	</insert>

	<!-- 다운로드할때 있는 쿠폰인지 확인 -->
	<select id="selectCouponByType"
		resultType="kr.co.matchday.admin.CouponMasterDTO">
		SELECT *
		FROM couponmaster
		WHERE coupontypeid =
		#{coupontypeid}
	</select>

	<!-- 이미 다운로드했는지 확인 -->
	<select id="checkUserDownloadedCoupon" resultType="int">
		SELECT COUNT(*)
		FROM coupon
		WHERE userid = #{userid} AND coupontypeid = #{coupontypeid}
	</select>

	<!-- 사용자가 보유한 쿠폰 목록에서 만료된 쿠폰 제거 쿠폰마스터테이블 조인해서 enddate 가져옴 -->
	<delete id="deleteExpiredCoupons">
        <![CDATA[
            DELETE c
            FROM coupon c
            INNER JOIN couponmaster cm ON c.coupontypeid = cm.coupontypeid
            WHERE cm.enddate < CURDATE()
        ]]>
	</delete>

	<!-- 사용자의 총 포인트 계산 -->
	<!-- <select id="getTotalPoints" resultType="int" parameterType="String"> 
		SELECT COALESCE(SUM(CASE WHEN pointtype IN('적립', '적립취소', '사용취소', '사용') THEN 
		pointamount ELSE 0 END), 0) - COALESCE(SUM(CASE WHEN pointtype = '사용' THEN 
		pointamount ELSE 0 END), 0) AS totalpoints FROM pointhistory WHERE userid 
		= #{userid} </select> -->

	<select id="getTotalPoints" resultType="int"
		parameterType="String">
		SELECT
		COALESCE(SUM(CASE WHEN pointtype IN('적립', '적립취소', '사용취소', '사용') THEN pointamount ELSE 0
		END), 0) AS totalpoints
		FROM
		pointhistory
		WHERE
		userid = #{userid}
	</select>

	<!-- totalpoints 업데이트 -->
	<update id="updateTotalPoints">
		UPDATE users
		SET totalpoints = #{totalpoints}
		WHERE userid = #{userid}
	</update>

	<!-- totalpoints 업데이트 -->
	<update id="buyupdateTotalPoints">
		UPDATE users u
		JOIN (
		SELECT userid, SUM(usedpoints) AS totalUsedPoints
		FROM `order`
		WHERE orderid = #{orderid}
		GROUP BY userid
		) o ON u.userid = o.userid
		SET u.totalpoints = u.totalpoints - o.totalUsedPoints
		WHERE u.userid = #{userid};
	</update>


</mapper>

