<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Customer">

    <!-- 고객 문의 삽입 쿼리 -->
    <insert id="insert" parameterType="kr.co.matchday.customer.CustomerDTO">
        INSERT INTO Inquiries (title, content, referenceID, userID, createdDate, boardType, inqpasswd, isReplyHandled)
        VALUES (#{title}, #{content}, #{referenceID}, #{userID}, #{createdDate}, #{boardType}, #{inqpasswd}, #{isReplyHandled})
    </insert>

    <!-- 전체 문의 목록 조회 쿼리 -->
    <select id="listAll" resultType="kr.co.matchday.customer.CustomerDTO">
        SELECT inquiryID, title, content, referenceID, userID, createdDate, boardType, inqpasswd, isReplyHandled
        FROM Inquiries 
        ORDER BY createdDate DESC
    </select>

    <!-- 공통 컬럼 정의 -->
    <sql id="customerColumns">
        inquiryID, title, content, referenceID, userID, createdDate, inquiryReply, isReplyHandled, boardType, inqpasswd
    </sql>

    <!-- 카테고리별 문의 목록 조회 쿼리 -->
    <select id="listByCategory" parameterType="map" resultType="kr.co.matchday.customer.CustomerDTO">
        SELECT 
            <include refid="customerColumns"/>
        FROM 
            Inquiries
        <where>
            <if test="category != 'all'">
                boardType = #{category}
            </if>
        </where>
        ORDER BY
            createdDate DESC
        LIMIT #{start}, #{pageSize}
    </select>

    <!-- 카테고리별 게시글 수 조회 쿼리 -->
    <select id="countByCategory" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM Inquiries
        <where>
            <if test="category != 'all'">
                boardType = #{category}
            </if>
        </where>
    </select>

    <!-- 검색어를 포함한 문의 목록 조회 쿼리 -->
    <select id="searchInquiries" parameterType="map" resultType="kr.co.matchday.customer.CustomerDTO">
        SELECT 
            <include refid="customerColumns"/>
        FROM 
            Inquiries
        <where>
            <if test="col == 'subject_content'">
                (title LIKE CONCAT('%', #{word}, '%') OR content LIKE CONCAT('%', #{word}, '%'))
            </if>
            <if test="col == 'title'">
                title LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="col == 'content'">
                content LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="col == 'userID'">
                userID LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="category != 'all'">
                AND boardType = #{category}
            </if>
        </where>
        ORDER BY
            createdDate DESC
        LIMIT #{start}, #{pageSize}
    </select>

    <!-- 검색어를 포함한 문의 수 조회 쿼리 -->
    <select id="countSearchInquiries" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM Inquiries
        <where>
            <if test="col == 'subject_content'">
                (title LIKE CONCAT('%', #{word}, '%') OR content LIKE CONCAT('%', #{word}, '%'))
            </if>
            <if test="col == 'title'">
                title LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="col == 'content'">
                content LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="col == 'userID'">
                userID LIKE CONCAT('%', #{word}, '%')
            </if>
            <if test="category != 'all'">
                AND boardType = #{category}
            </if>
        </where>
    </select>

    <!-- 문의 상세 정보 조회 쿼리 -->
    <select id="customerDetail" resultType="kr.co.matchday.customer.CustomerDTO">
        SELECT inquiryID, title, content, referenceID, userID, createdDate, boardType, inqpasswd, isReplyHandled, inquiryReply, replyDate
        FROM Inquiries 
        WHERE inquiryID = #{inquiryID}
    </select>
    
    <!-- 문의 삭제 쿼리 -->
    <delete id="deleteInquiry" parameterType="int">
        DELETE FROM Inquiries WHERE inquiryID = #{inquiryID}
    </delete>
    
    <!-- 문의 수정 쿼리 -->
    <update id="updateInquiry" parameterType="kr.co.matchday.customer.CustomerDTO">
        UPDATE Inquiries
        SET title = #{title}, content = #{content}, inqpasswd = #{inqpasswd}
        WHERE inquiryID = #{inquiryID}
    </update>
    
    <!-- 관리자의 답변 추가 및 상태 업데이트 쿼리 -->
    <update id="replyInquiry" parameterType="map">
        UPDATE Inquiries
        SET inquiryReply = #{replyContent}, isReplyHandled = '답변완료', replyDate = CURRENT_TIMESTAMP
        WHERE inquiryID = #{inquiryID}
    </update>

</mapper>
