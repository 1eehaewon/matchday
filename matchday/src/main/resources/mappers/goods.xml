<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="goods">
 
 
 	<!-- 상품 추가 -->
    <insert id="insert" parameterType="kr.co.matchday.goods.GoodsDTO">
        INSERT INTO goods(goodsid, category, productname, description, size, price, stockquantity, issoldout, filename, filesize, regdate, caution, deliveryreturnsexchangesinfo)
        VALUES(#{goodsid}, #{category}, #{productname}, #{description}, #{size}, #{price}, #{stockquantity}, #{issoldout}, #{filename}, #{filesize}, #{regdate}, #{caution}, #{deliveryreturnsexchangesinfo})
    </insert>
    
    <!-- 전체 상품 목록 조회 -->
    <select id="list" resultType="kr.co.matchday.goods.GoodsDTO">
        SELECT goodsid, category, productname, description, size, price, stockquantity, issoldout, filename, filesize, regdate, caution, deliveryreturnsexchangesinfo
        FROM goods
        ORDER BY productname
    </select>
    
    <!-- 상품 검색 -->
    <select id="search" resultType="kr.co.matchday.goods.GoodsDTO" parameterType="String">
        SELECT goodsid, category, productname, description, size, price, stockquantity, issoldout, filename, filesize, regdate, caution, deliveryreturnsexchangesinfo
        FROM goods
        WHERE productname LIKE #{keyword}
        ORDER BY productname
    </select>
    
    <!-- 특정 상품 상세 조회 -->
    <select id="detail" resultType="kr.co.matchday.goods.GoodsDTO" parameterType="String">
        SELECT goodsid, category, productname, description, size, price, stockquantity, issoldout, filename, filesize, regdate, caution, deliveryreturnsexchangesinfo
        FROM goods
        WHERE goodsid = #{goodsid}
    </select>
    
    <!-- 상품 정보 수정 -->
    <update id="update" parameterType="kr.co.matchday.goods.GoodsDTO">
        UPDATE goods
        SET category = #{category},
            productname = #{productname},
            description = #{description},
            size = #{size},
            price = #{price},
            stockquantity = #{stockquantity},
            issoldout = #{issoldout},
            filename = #{filename},
            filesize = #{filesize},
            regdate = #{regdate},
            caution = #{caution},
            deliveryreturnsexchangesinfo = #{deliveryreturnsexchangesinfo}
        WHERE goodsid = #{goodsid}
    </update>
    
    <!-- 상품 삭제 -->
    <delete id="delete" parameterType="String">
        DELETE FROM goods
        WHERE goodsid = #{goodsid}
    </delete>
	
	<!-- 굿즈 ID에 해당하는 파일명 조회 -->
	<select id="filename" resultType="java.lang.String">
	    SELECT filename
	    FROM goods
	    WHERE goodsid = #{goodsid}
	</select>
	
	<!-- 페이징 처리된 전체 상품 목록 조회 -->
    <select id="listWithPaging" resultType="kr.co.matchday.goods.GoodsDTO" parameterType="map">
        SELECT goodsid, category, productname, description, size, price, stockquantity, issoldout, filename, filesize, regdate, caution, deliveryreturnsexchangesinfo
        FROM goods
        ORDER BY productname
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 상품 수 조회 -->
    <select id="countGoods" resultType="int">
        SELECT COUNT(*) FROM goods
    </select>
	
	<!-- 재고 추가 -->
    <insert id="stockinsert" parameterType="kr.co.matchday.goods.StockDTO">
        INSERT INTO stock(goodsid, size, stockquantity)
        VALUES(#{goodsid}, #{size}, #{stockquantity})
    </insert>

    <!-- 특정 상품에 대한 재고 목록 조회 -->
    <select id="stocklist" resultType="kr.co.matchday.goods.StockDTO">
        SELECT goodsid, size, stockquantity
        FROM stock
        WHERE goodsid = #{goodsid}
        ORDER BY FIELD(size, 'FREE', 'S', 'M', 'L', 'XL')
    </select>

    <!-- 재고 정보 수정 -->
    <update id="stockupdate" parameterType="kr.co.matchday.goods.StockDTO">
        UPDATE stock
        SET stockquantity = #{stockquantity}
        WHERE goodsid = #{goodsid} AND size = #{size}
    </update>
    
    <!-- 재고 삭제 -->
    <delete id="stockdelete" parameterType="kr.co.matchday.goods.StockDTO">
        DELETE FROM stock
        WHERE goodsid = #{goodsid}
    </delete>
    
    <!-- 상품 구매 시 재고 감소 -->
    <update id="buystockupdate" parameterType="kr.co.matchday.goods.StockDTO">
        UPDATE stock
        SET stockquantity = stockquantity - #{stockquantity}
        WHERE goodsid = #{goodsid} AND size = #{size}
    </update>
	
	
	<!-- 구매하기 하고나서 추가 
		<update id="stockupdate" parameterType="kr.co.matchday.goods.StockDTO">
		UPDATE stock
		SET stockquantity = stockquantity-1
		WHERE goodsid = #{goodsid} AND size = #{size};
	</update> -->
	

	
	
	
 </mapper>